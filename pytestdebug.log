versions pytest-8.3.4, python-3.12.4.final.0
invocation_dir=C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1
cwd=C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1
args=('src/test/test_get_tournaments.py', '--debug')

  pytest_cmdline_main [hook]
      config: <_pytest.config.Config object at 0x000001E8A4CCFC20>
    pytest_plugin_registered [hook]
        plugin: <Session  exitstatus='<UNSET>' testsfailed=0 testscollected=0>
        plugin_name: session
        manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
    finish pytest_plugin_registered --> [] [hook]
    pytest_configure [hook]
        config: <_pytest.config.Config object at 0x000001E8A4CCFC20>
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x000001E8AA049520>
          plugin_name: lfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x000001E8A9F0BBF0>
          plugin_name: nfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
    early skip of rewriting module: faulthandler [assertion]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTmpdirPlugin'>
          plugin_name: legacypath-tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
    early skip of rewriting module: pdb [assertion]
    early skip of rewriting module: cmd [assertion]
    early skip of rewriting module: code [assertion]
    early skip of rewriting module: codeop [assertion]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
          plugin_name: 2098714836912
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.Config object at 0x000001E8A4CCFC20>
          plugin_name: pytestconfig
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.mark' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\_pytest\\mark\\__init__.py'>
          plugin_name: mark
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.main' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\_pytest\\main.py'>
          plugin_name: main
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.runner' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\_pytest\\runner.py'>
          plugin_name: runner
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.fixtures' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\_pytest\\fixtures.py'>
          plugin_name: fixtures
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.helpconfig' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\_pytest\\helpconfig.py'>
          plugin_name: helpconfig
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\_pytest\\python.py'>
          plugin_name: python
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.terminal' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\_pytest\\terminal.py'>
          plugin_name: terminal
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.debugging' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\_pytest\\debugging.py'>
          plugin_name: debugging
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unittest' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\_pytest\\unittest.py'>
          plugin_name: unittest
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.capture' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\_pytest\\capture.py'>
          plugin_name: capture
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.skipping' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\_pytest\\skipping.py'>
          plugin_name: skipping
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.legacypath' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\_pytest\\legacypath.py'>
          plugin_name: legacypath
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.tmpdir' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\_pytest\\tmpdir.py'>
          plugin_name: tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.monkeypatch' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\_pytest\\monkeypatch.py'>
          plugin_name: monkeypatch
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.recwarn' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\_pytest\\recwarn.py'>
          plugin_name: recwarn
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.pastebin' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\_pytest\\pastebin.py'>
          plugin_name: pastebin
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.assertion' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\_pytest\\assertion\\__init__.py'>
          plugin_name: assertion
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.junitxml' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\_pytest\\junitxml.py'>
          plugin_name: junitxml
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.doctest' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\_pytest\\doctest.py'>
          plugin_name: doctest
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.cacheprovider' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\_pytest\\cacheprovider.py'>
          plugin_name: cacheprovider
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.freeze_support' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\_pytest\\freeze_support.py'>
          plugin_name: freeze_support
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setuponly' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\_pytest\\setuponly.py'>
          plugin_name: setuponly
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setupplan' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\_pytest\\setupplan.py'>
          plugin_name: setupplan
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.stepwise' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\_pytest\\stepwise.py'>
          plugin_name: stepwise
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.warnings' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\_pytest\\warnings.py'>
          plugin_name: warnings
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.logging' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\_pytest\\logging.py'>
          plugin_name: logging
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.reports' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\_pytest\\reports.py'>
          plugin_name: reports
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python_path' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\_pytest\\python_path.py'>
          plugin_name: python_path
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unraisableexception' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\_pytest\\unraisableexception.py'>
          plugin_name: unraisableexception
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.threadexception' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\_pytest\\threadexception.py'>
          plugin_name: threadexception
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.faulthandler' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\_pytest\\faulthandler.py'>
          plugin_name: faulthandler
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'anyio.pytest_plugin' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\anyio\\pytest_plugin.py'>
          plugin_name: anyio
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_asyncio.plugin' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\pytest_asyncio\\plugin.py'>
          plugin_name: asyncio
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_mock' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\pytest_mock\\__init__.py'>
          plugin_name: pytest_mock
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <CaptureManager _method='fd' _global_capturing=<MultiCapture out=<FDCapture 1 oldfd=9 _state='suspended' tmpfile=<_io.TextIOWrapper name='<tempfile._TemporaryFileWrapper object at 0x000001E8A70CE4B0>' mode='r+' encoding='utf-8'>> err=<FDCapture 2 oldfd=11 _state='suspended' tmpfile=<_io.TextIOWrapper name='<tempfile._TemporaryFileWrapper object at 0x000001E8A7119DF0>' mode='r+' encoding='utf-8'>> in_=<FDCapture 0 oldfd=7 _state='started' tmpfile=<_io.TextIOWrapper name='nul' mode='r' encoding='utf-8'>> _state='suspended' _in_suspended=False> _capture_fixture=None>
          plugin_name: capturemanager
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'src.test.conftest' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\src\\test\\conftest.py'>
          plugin_name: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\test\conftest.py
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          plugin_name: session
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x000001E8AA049520>
          plugin_name: lfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x000001E8A9F0BBF0>
          plugin_name: nfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTmpdirPlugin'>
          plugin_name: legacypath-tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_warning_recorded [hook]
          warning_message: {message : PydanticDeprecatedSince20('Support for class-based `config` is deprecated, use ConfigDict instead.'), category : 'PydanticDeprecatedSince20', filename : 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\pydantic\\_internal\\_config.py', lineno : 295, line : None}
          nodeid: 
          when: config
          location: None
      finish pytest_warning_recorded --> [] [hook]
      pytest_warning_recorded [hook]
          warning_message: {message : PydanticDeprecatedSince20('Support for class-based `config` is deprecated, use ConfigDict instead.'), category : 'PydanticDeprecatedSince20', filename : 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\pydantic\\_internal\\_config.py', lineno : 295, line : None}
          nodeid: 
          when: config
          location: None
      finish pytest_warning_recorded --> [] [hook]
      pytest_warning_recorded [hook]
          warning_message: {message : PydanticDeprecatedSince20('Support for class-based `config` is deprecated, use ConfigDict instead.'), category : 'PydanticDeprecatedSince20', filename : 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\pydantic\\_internal\\_config.py', lineno : 295, line : None}
          nodeid: 
          when: config
          location: None
      finish pytest_warning_recorded --> [] [hook]
      pytest_warning_recorded [hook]
          warning_message: {message : PydanticDeprecatedSince20('`json_encoders` is deprecated. See https://docs.pydantic.dev/2.10/concepts/serialization/#custom-serializers for alternatives'), category : 'PydanticDeprecatedSince20', filename : 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\pydantic\\_internal\\_generate_schema.py', lineno : 297, line : None}
          nodeid: 
          when: config
          location: None
      finish pytest_warning_recorded --> [] [hook]
      pytest_warning_recorded [hook]
          warning_message: {message : PydanticDeprecatedSince20('`json_encoders` is deprecated. See https://docs.pydantic.dev/2.10/concepts/serialization/#custom-serializers for alternatives'), category : 'PydanticDeprecatedSince20', filename : 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\pydantic\\_internal\\_generate_schema.py', lineno : 297, line : None}
          nodeid: 
          when: config
          location: None
      finish pytest_warning_recorded --> [] [hook]
      pytest_warning_recorded [hook]
          warning_message: {message : PydanticDeprecatedSince20('Support for class-based `config` is deprecated, use ConfigDict instead.'), category : 'PydanticDeprecatedSince20', filename : 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\pydantic\\_internal\\_config.py', lineno : 295, line : None}
          nodeid: 
          when: config
          location: None
      finish pytest_warning_recorded --> [] [hook]
      pytest_warning_recorded [hook]
          warning_message: {message : PydanticDeprecatedSince20('Support for class-based `config` is deprecated, use ConfigDict instead.'), category : 'PydanticDeprecatedSince20', filename : 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\pydantic\\_internal\\_config.py', lineno : 295, line : None}
          nodeid: 
          when: config
          location: None
      finish pytest_warning_recorded --> [] [hook]
      pytest_warning_recorded [hook]
          warning_message: {message : PydanticDeprecatedSince20('Support for class-based `config` is deprecated, use ConfigDict instead.'), category : 'PydanticDeprecatedSince20', filename : 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\pydantic\\_internal\\_config.py', lineno : 295, line : None}
          nodeid: 
          when: config
          location: None
      finish pytest_warning_recorded --> [] [hook]
      pytest_warning_recorded [hook]
          warning_message: {message : PydanticDeprecatedSince20('Support for class-based `config` is deprecated, use ConfigDict instead.'), category : 'PydanticDeprecatedSince20', filename : 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\pydantic\\_internal\\_config.py', lineno : 295, line : None}
          nodeid: 
          when: config
          location: None
      finish pytest_warning_recorded --> [] [hook]
      pytest_warning_recorded [hook]
          warning_message: {message : PydanticDeprecatedSince20('`json_encoders` is deprecated. See https://docs.pydantic.dev/2.10/concepts/serialization/#custom-serializers for alternatives'), category : 'PydanticDeprecatedSince20', filename : 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\pydantic\\_internal\\_generate_schema.py', lineno : 297, line : None}
          nodeid: 
          when: config
          location: None
      finish pytest_warning_recorded --> [] [hook]
      pytest_warning_recorded [hook]
          warning_message: {message : PydanticDeprecatedSince20('`json_encoders` is deprecated. See https://docs.pydantic.dev/2.10/concepts/serialization/#custom-serializers for alternatives'), category : 'PydanticDeprecatedSince20', filename : 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\pydantic\\_internal\\_generate_schema.py', lineno : 297, line : None}
          nodeid: 
          when: config
          location: None
      finish pytest_warning_recorded --> [] [hook]
      pytest_warning_recorded [hook]
          warning_message: {message : PydanticDeprecatedSince20('Support for class-based `config` is deprecated, use ConfigDict instead.'), category : 'PydanticDeprecatedSince20', filename : 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\pydantic\\_internal\\_config.py', lineno : 295, line : None}
          nodeid: 
          when: config
          location: None
      finish pytest_warning_recorded --> [] [hook]
      pytest_warning_recorded [hook]
          warning_message: {message : PydanticDeprecatedSince20('`json_encoders` is deprecated. See https://docs.pydantic.dev/2.10/concepts/serialization/#custom-serializers for alternatives'), category : 'PydanticDeprecatedSince20', filename : 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\pydantic\\_internal\\_generate_schema.py', lineno : 297, line : None}
          nodeid: 
          when: config
          location: None
      finish pytest_warning_recorded --> [] [hook]
      pytest_warning_recorded [hook]
          warning_message: {message : PydanticDeprecatedSince20('`json_encoders` is deprecated. See https://docs.pydantic.dev/2.10/concepts/serialization/#custom-serializers for alternatives'), category : 'PydanticDeprecatedSince20', filename : 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\pydantic\\_internal\\_generate_schema.py', lineno : 297, line : None}
          nodeid: 
          when: config
          location: None
      finish pytest_warning_recorded --> [] [hook]
      pytest_warning_recorded [hook]
          warning_message: {message : PydanticDeprecatedSince20('Support for class-based `config` is deprecated, use ConfigDict instead.'), category : 'PydanticDeprecatedSince20', filename : 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\pydantic\\_internal\\_config.py', lineno : 295, line : None}
          nodeid: 
          when: config
          location: None
      finish pytest_warning_recorded --> [] [hook]
      pytest_warning_recorded [hook]
          warning_message: {message : PydanticDeprecatedSince20('Support for class-based `config` is deprecated, use ConfigDict instead.'), category : 'PydanticDeprecatedSince20', filename : 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\pydantic\\_internal\\_config.py', lineno : 295, line : None}
          nodeid: 
          when: config
          location: None
      finish pytest_warning_recorded --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.terminal.TerminalReporter object at 0x000001E8A711A660>
          plugin_name: terminalreporter
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.logging.LoggingPlugin object at 0x000001E8AA0491F0>
          plugin_name: logging-plugin
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
    finish pytest_configure --> [] [hook]
    pytest_sessionstart [hook]
        session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
          plugin_name: 2098714836912
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.Config object at 0x000001E8A4CCFC20>
          plugin_name: pytestconfig
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.mark' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\_pytest\\mark\\__init__.py'>
          plugin_name: mark
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.main' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\_pytest\\main.py'>
          plugin_name: main
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.runner' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\_pytest\\runner.py'>
          plugin_name: runner
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.fixtures' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\_pytest\\fixtures.py'>
          plugin_name: fixtures
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.helpconfig' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\_pytest\\helpconfig.py'>
          plugin_name: helpconfig
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\_pytest\\python.py'>
          plugin_name: python
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.terminal' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\_pytest\\terminal.py'>
          plugin_name: terminal
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.debugging' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\_pytest\\debugging.py'>
          plugin_name: debugging
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unittest' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\_pytest\\unittest.py'>
          plugin_name: unittest
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.capture' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\_pytest\\capture.py'>
          plugin_name: capture
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.skipping' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\_pytest\\skipping.py'>
          plugin_name: skipping
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.legacypath' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\_pytest\\legacypath.py'>
          plugin_name: legacypath
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.tmpdir' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\_pytest\\tmpdir.py'>
          plugin_name: tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.monkeypatch' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\_pytest\\monkeypatch.py'>
          plugin_name: monkeypatch
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.recwarn' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\_pytest\\recwarn.py'>
          plugin_name: recwarn
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.pastebin' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\_pytest\\pastebin.py'>
          plugin_name: pastebin
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.assertion' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\_pytest\\assertion\\__init__.py'>
          plugin_name: assertion
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.junitxml' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\_pytest\\junitxml.py'>
          plugin_name: junitxml
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.doctest' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\_pytest\\doctest.py'>
          plugin_name: doctest
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.cacheprovider' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\_pytest\\cacheprovider.py'>
          plugin_name: cacheprovider
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.freeze_support' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\_pytest\\freeze_support.py'>
          plugin_name: freeze_support
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setuponly' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\_pytest\\setuponly.py'>
          plugin_name: setuponly
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setupplan' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\_pytest\\setupplan.py'>
          plugin_name: setupplan
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.stepwise' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\_pytest\\stepwise.py'>
          plugin_name: stepwise
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.warnings' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\_pytest\\warnings.py'>
          plugin_name: warnings
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.logging' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\_pytest\\logging.py'>
          plugin_name: logging
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.reports' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\_pytest\\reports.py'>
          plugin_name: reports
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python_path' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\_pytest\\python_path.py'>
          plugin_name: python_path
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unraisableexception' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\_pytest\\unraisableexception.py'>
          plugin_name: unraisableexception
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.threadexception' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\_pytest\\threadexception.py'>
          plugin_name: threadexception
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.faulthandler' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\_pytest\\faulthandler.py'>
          plugin_name: faulthandler
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'anyio.pytest_plugin' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\anyio\\pytest_plugin.py'>
          plugin_name: anyio
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_asyncio.plugin' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\pytest_asyncio\\plugin.py'>
          plugin_name: asyncio
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_mock' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\pytest_mock\\__init__.py'>
          plugin_name: pytest_mock
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <CaptureManager _method='fd' _global_capturing=<MultiCapture out=<FDCapture 1 oldfd=9 _state='suspended' tmpfile=<_io.TextIOWrapper name='<tempfile._TemporaryFileWrapper object at 0x000001E8A70CE4B0>' mode='r+' encoding='utf-8'>> err=<FDCapture 2 oldfd=11 _state='suspended' tmpfile=<_io.TextIOWrapper name='<tempfile._TemporaryFileWrapper object at 0x000001E8A7119DF0>' mode='r+' encoding='utf-8'>> in_=<FDCapture 0 oldfd=7 _state='started' tmpfile=<_io.TextIOWrapper name='nul' mode='r' encoding='utf-8'>> _state='suspended' _in_suspended=False> _capture_fixture=None>
          plugin_name: capturemanager
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'src.test.conftest' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\src\\test\\conftest.py'>
          plugin_name: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\test\conftest.py
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          plugin_name: session
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x000001E8AA049520>
          plugin_name: lfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x000001E8A9F0BBF0>
          plugin_name: nfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTmpdirPlugin'>
          plugin_name: legacypath-tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.terminal.TerminalReporter object at 0x000001E8A711A660>
          plugin_name: terminalreporter
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.logging.LoggingPlugin object at 0x000001E8AA0491F0>
          plugin_name: logging-plugin
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.fixtures.FixtureManager object at 0x000001E8AA04B6B0>
          plugin_name: funcmanage
          manager: <_pytest.config.PytestPluginManager object at 0x000001E8A526FFB0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_report_header [hook]
          config: <_pytest.config.Config object at 0x000001E8A4CCFC20>
          start_path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1
          startdir: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1
      finish pytest_report_header --> [['asyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None'], ['rootdir: C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1', 'configfile: pytest.ini', 'plugins: anyio-4.7.0, asyncio-0.25.2, mock-3.14.0'], ['using: pytest-8.3.4', 'registered third-party plugins:', '  anyio-4.7.0 at C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\anyio\\pytest_plugin.py', '  pytest-asyncio-0.25.2 at C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\pytest_asyncio\\plugin.py', '  pytest-mock-3.14.0 at C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\pytest_mock\\__init__.py']] [hook]
    finish pytest_sessionstart --> [] [hook]
    pytest_collection [hook]
        session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
    perform_collect <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0> ['src/test/test_get_tournaments.py'] [collection]
        pytest_collectstart [hook]
            collector: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        processing argument CollectionArgument(path=WindowsPath('C:/Users/Gaston/UPATECO/Programacion/Porg 4/Tetris/Tetris-Byte-Force-BACK-1/src/test/test_get_tournaments.py'), parts=[], module_name=None) [collection]
            pytest_collect_directory [hook]
                path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1
                parent: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_directory --> <Dir Tetris-Byte-Force-BACK-1> [hook]
            pytest_collectstart [hook]
                collector: <Dir Tetris-Byte-Force-BACK-1>
            finish pytest_collectstart --> [] [hook]
            pytest_make_collect_report [hook]
                collector: <Dir Tetris-Byte-Force-BACK-1>
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x000001E8A4CCFC20>
                  collection_path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\.env
                  path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\.env
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir Tetris-Byte-Force-BACK-1>
                  file_path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\.env
                  path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\.env
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x000001E8A4CCFC20>
                  collection_path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\.git
                  path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\.git
              finish pytest_ignore_collect --> True [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x000001E8A4CCFC20>
                  collection_path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\.gitignore
                  path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\.gitignore
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir Tetris-Byte-Force-BACK-1>
                  file_path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\.gitignore
                  path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\.gitignore
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x000001E8A4CCFC20>
                  collection_path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\.pytest_cache
                  path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\.pytest_cache
              finish pytest_ignore_collect --> True [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x000001E8A4CCFC20>
                  collection_path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\Procfile
                  path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\Procfile
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir Tetris-Byte-Force-BACK-1>
                  file_path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\Procfile
                  path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\Procfile
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x000001E8A4CCFC20>
                  collection_path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\README.md
                  path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\README.md
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir Tetris-Byte-Force-BACK-1>
                  file_path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\README.md
                  path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\README.md
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x000001E8A4CCFC20>
                  collection_path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\env
                  path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\env
              finish pytest_ignore_collect --> True [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x000001E8A4CCFC20>
                  collection_path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\main.py
                  path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\main.py
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir Tetris-Byte-Force-BACK-1>
                  file_path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\main.py
                  path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\main.py
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x000001E8A4CCFC20>
                  collection_path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\pytest.ini
                  path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\pytest.ini
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir Tetris-Byte-Force-BACK-1>
                  file_path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\pytest.ini
                  path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\pytest.ini
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x000001E8A4CCFC20>
                  collection_path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\pytestdebug.log
                  path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\pytestdebug.log
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir Tetris-Byte-Force-BACK-1>
                  file_path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\pytestdebug.log
                  path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\pytestdebug.log
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x000001E8A4CCFC20>
                  collection_path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\requirements.txt
                  path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\requirements.txt
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir Tetris-Byte-Force-BACK-1>
                  file_path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\requirements.txt
                  path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\requirements.txt
              finish pytest_collect_file --> [] [hook]
              pytest_collect_directory [hook]
                  path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src
                  parent: <Dir Tetris-Byte-Force-BACK-1>
              finish pytest_collect_directory --> <Package src> [hook]
            finish pytest_make_collect_report --> <CollectReport '.' lenresult=1 outcome='passed'> [hook]
            pytest_collectstart [hook]
                collector: <Package src>
            finish pytest_collectstart --> [] [hook]
            pytest_make_collect_report [hook]
                collector: <Package src>
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x000001E8A4CCFC20>
                  collection_path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\__init__.py
                  path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\__init__.py
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Package src>
                  file_path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\__init__.py
                  path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\__init__.py
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x000001E8A4CCFC20>
                  collection_path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\__pycache__
                  path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\__pycache__
              finish pytest_ignore_collect --> True [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x000001E8A4CCFC20>
                  collection_path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\config
                  path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\config
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_directory [hook]
                  path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\config
                  parent: <Package src>
              finish pytest_collect_directory --> <Package config> [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x000001E8A4CCFC20>
                  collection_path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\database
                  path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\database
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_directory [hook]
                  path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\database
                  parent: <Package src>
              finish pytest_collect_directory --> <Package database> [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x000001E8A4CCFC20>
                  collection_path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\middleware
                  path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\middleware
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_directory [hook]
                  path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\middleware
                  parent: <Package src>
              finish pytest_collect_directory --> <Package middleware> [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x000001E8A4CCFC20>
                  collection_path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\models
                  path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\models
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_directory [hook]
                  path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\models
                  parent: <Package src>
              finish pytest_collect_directory --> <Package models> [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x000001E8A4CCFC20>
                  collection_path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\routers
                  path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\routers
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_directory [hook]
                  path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\routers
                  parent: <Package src>
              finish pytest_collect_directory --> <Package routers> [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x000001E8A4CCFC20>
                  collection_path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\schemas
                  path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\schemas
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_directory [hook]
                  path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\schemas
                  parent: <Package src>
              finish pytest_collect_directory --> <Package schemas> [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x000001E8A4CCFC20>
                  collection_path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\services
                  path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\services
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_directory [hook]
                  path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\services
                  parent: <Package src>
              finish pytest_collect_directory --> <Package services> [hook]
              pytest_collect_directory [hook]
                  path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\test
                  parent: <Package src>
              finish pytest_collect_directory --> <Package test> [hook]
            finish pytest_make_collect_report --> <CollectReport 'src' lenresult=8 outcome='passed'> [hook]
            pytest_collectstart [hook]
                collector: <Package test>
            finish pytest_collectstart --> [] [hook]
            pytest_make_collect_report [hook]
                collector: <Package test>
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x000001E8A4CCFC20>
                  collection_path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\test\__init__.py
                  path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\test\__init__.py
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Package test>
                  file_path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\test\__init__.py
                  path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\test\__init__.py
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x000001E8A4CCFC20>
                  collection_path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\test\__pycache__
                  path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\test\__pycache__
              finish pytest_ignore_collect --> True [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x000001E8A4CCFC20>
                  collection_path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\test\conftest.py
                  path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\test\conftest.py
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Package test>
                  file_path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\test\conftest.py
                  path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\test\conftest.py
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x000001E8A4CCFC20>
                  collection_path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\test\test_auth.py
                  path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\test\test_auth.py
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Package test>
                  file_path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\test\test_auth.py
                  path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\test\test_auth.py
                pytest_pycollect_makemodule [hook]
                    parent: <Package test>
                    module_path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\test\test_auth.py
                    path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\test\test_auth.py
                finish pytest_pycollect_makemodule --> <Module test_auth.py> [hook]
              finish pytest_collect_file --> [<Module test_auth.py>] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x000001E8A4CCFC20>
                  collection_path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\test\test_calculator.py
                  path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\test\test_calculator.py
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Package test>
                  file_path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\test\test_calculator.py
                  path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\test\test_calculator.py
                pytest_pycollect_makemodule [hook]
                    parent: <Package test>
                    module_path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\test\test_calculator.py
                    path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\test\test_calculator.py
                finish pytest_pycollect_makemodule --> <Module test_calculator.py> [hook]
              finish pytest_collect_file --> [<Module test_calculator.py>] [hook]
              pytest_collect_file [hook]
                  parent: <Package test>
                  file_path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\test\test_get_tournaments.py
                  path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\test\test_get_tournaments.py
                pytest_pycollect_makemodule [hook]
                    parent: <Package test>
                    module_path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\test\test_get_tournaments.py
                    path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\test\test_get_tournaments.py
                finish pytest_pycollect_makemodule --> <Module test_get_tournaments.py> [hook]
              finish pytest_collect_file --> [<Module test_get_tournaments.py>] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x000001E8A4CCFC20>
                  collection_path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\test\test_participant.py
                  path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\test\test_participant.py
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Package test>
                  file_path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\test\test_participant.py
                  path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\test\test_participant.py
                pytest_pycollect_makemodule [hook]
                    parent: <Package test>
                    module_path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\test\test_participant.py
                    path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\test\test_participant.py
                finish pytest_pycollect_makemodule --> <Module test_participant.py> [hook]
              finish pytest_collect_file --> [<Module test_participant.py>] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x000001E8A4CCFC20>
                  collection_path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\test\test_tournament.py
                  path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\test\test_tournament.py
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Package test>
                  file_path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\test\test_tournament.py
                  path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\test\test_tournament.py
                pytest_pycollect_makemodule [hook]
                    parent: <Package test>
                    module_path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\test\test_tournament.py
                    path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\test\test_tournament.py
                finish pytest_pycollect_makemodule --> <Module test_tournament.py> [hook]
              finish pytest_collect_file --> [<Module test_tournament.py>] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x000001E8A4CCFC20>
                  collection_path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\test\test_user.py
                  path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\test\test_user.py
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Package test>
                  file_path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\test\test_user.py
                  path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\test\test_user.py
                pytest_pycollect_makemodule [hook]
                    parent: <Package test>
                    module_path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\test\test_user.py
                    path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\test\test_user.py
                finish pytest_pycollect_makemodule --> <Module test_user.py> [hook]
              finish pytest_collect_file --> [<Module test_user.py>] [hook]
            finish pytest_make_collect_report --> <CollectReport 'src/test' lenresult=6 outcome='passed'> [hook]
        finish pytest_make_collect_report --> <CollectReport '' lenresult=1 outcome='passed'> [hook]
        pytest_collectreport [hook]
            report: <CollectReport '' lenresult=1 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
    genitems <Module test_get_tournaments.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_get_tournaments.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_get_tournaments.py>
      find_module called for: src.test.test_get_tournaments [assertion]
      matched test file (was specified on cmdline): 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\src\\test\\test_get_tournaments.py' [assertion]
      found cached rewritten pyc for C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1\src\test\test_get_tournaments.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_get_tournaments.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_get_tournaments.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_get_tournaments.py>
            name: pytest
            obj: <module 'pytest' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\pytest\\__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_get_tournaments.py>
            name: mocker
            obj: <function _mocker at 0x000001E8A70E68E0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_get_tournaments.py>
            name: datetime
            obj: <class 'datetime.datetime'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_get_tournaments.py>
            name: timezone
            obj: <class 'datetime.timezone'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_get_tournaments.py>
            name: Tournament
            obj: <class 'src.models.tournaments.Tournament'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_get_tournaments.py>
            name: StatusTournament
            obj: <enum 'StatusTournament'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_get_tournaments.py>
            name: TournamentParticipants
            obj: <class 'src.models.tournament_participants.TournamentParticipants'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_get_tournaments.py>
            name: TournamentService
            obj: <class 'src.services.tournament_service.TournamentService'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_get_tournaments.py>
            name: Organizer
            obj: <class 'src.models.organizer_model.Organizer'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_get_tournaments.py>
            name: AsyncMock
            obj: <class 'unittest.mock.AsyncMock'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_get_tournaments.py>
            name: HTTPException
            obj: <class 'fastapi.exceptions.HTTPException'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_get_tournaments.py>
            name: status
            obj: <module 'starlette.status' from 'C:\\Users\\Gaston\\UPATECO\\Programacion\\Porg 4\\Tetris\\Tetris-Byte-Force-BACK-1\\env\\Lib\\site-packages\\starlette\\status.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_get_tournaments.py>
            name: JSONResponse
            obj: <class 'starlette.responses.JSONResponse'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_get_tournaments.py>
            name: test_get_all_tournaments
            obj: <function test_get_all_tournaments at 0x000001E8AA0DEFC0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x000001E8AA04BA70>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_get_all_tournaments>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_get_tournaments.py>
            name: test_get_all_tournaments_with_filter
            obj: <function test_get_all_tournaments_with_filter at 0x000001E8AA0DF060>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x000001E8AA08F4D0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_get_all_tournaments_with_filter>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_get_tournaments.py>
            name: __pytest_asyncio_scoped_event_loop
            obj: <function pytest_collectstart.<locals>.scoped_event_loop at 0x000001E8AA0DE5C0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_get_tournaments.py>
            name: __pytest_asyncio_package_scoped_event_loop
            obj: <function pytest_collectstart.<locals>.scoped_event_loop at 0x000001E8AA0DE480>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'src/test/test_get_tournaments.py' lenresult=2 outcome='passed'> [hook]
    genitems <Coroutine test_get_all_tournaments> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_get_all_tournaments>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_get_all_tournaments_with_filter> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_get_all_tournaments_with_filter>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'src/test/test_get_tournaments.py' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collection_modifyitems [hook]
          session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          config: <_pytest.config.Config object at 0x000001E8A4CCFC20>
          items: [<Coroutine test_get_all_tournaments>, <Coroutine test_get_all_tournaments_with_filter>]
      finish pytest_collection_modifyitems --> [] [hook]
      pytest_collection_finish [hook]
          session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        pytest_report_collectionfinish [hook]
            config: <_pytest.config.Config object at 0x000001E8A4CCFC20>
            items: [<Coroutine test_get_all_tournaments>, <Coroutine test_get_all_tournaments_with_filter>]
            start_path: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1
            startdir: C:\Users\Gaston\UPATECO\Programacion\Porg 4\Tetris\Tetris-Byte-Force-BACK-1
        finish pytest_report_collectionfinish --> [] [hook]
      finish pytest_collection_finish --> [] [hook]
    finish pytest_collection --> None [hook]
    pytest_runtestloop [hook]
        session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=2>
      pytest_runtest_protocol [hook]
          item: <Coroutine test_get_all_tournaments>
          nextitem: <Coroutine test_get_all_tournaments_with_filter>
        pytest_runtest_logstart [hook]
            nodeid: src/test/test_get_tournaments.py::test_get_all_tournaments
            location: ('src\\test\\test_get_tournaments.py', 10, 'test_get_all_tournaments')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Coroutine test_get_all_tournaments>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Coroutine test_get_all_tournaments>>
          finish pytest_fixture_setup --> <asyncio.windows_events.WindowsProactorEventLoopPolicy object at 0x000001E8AA118260> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Coroutine test_get_all_tournaments>>
          finish pytest_fixture_setup --> <_pytest.config.Config object at 0x000001E8A4CCFC20> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='mocker' scope='function' baseid='src/test/test_get_tournaments.py'>
              request: <SubRequest 'mocker' for <Coroutine test_get_all_tournaments>>
          finish pytest_fixture_setup --> <pytest_mock.plugin.MockerFixture object at 0x000001E8AA118380> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_get_all_tournaments>>
          finish pytest_fixture_setup --> <ProactorEventLoop running=False closed=False debug=False> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_get_all_tournaments>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'src/test/test_get_tournaments.py::test_get_all_tournaments' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'src/test/test_get_tournaments.py::test_get_all_tournaments' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'src/test/test_get_tournaments.py::test_get_all_tournaments' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x000001E8A4CCFC20>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Coroutine test_get_all_tournaments>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Coroutine test_get_all_tournaments>
        pytest_runtest_makereport [hook]
            item: <Coroutine test_get_all_tournaments>
            call: <CallInfo when='call' excinfo=<ExceptionInfo HTTPException(status_code=500, detail='Error al intentar obtener torneos') tblen=40>>
        finish pytest_runtest_makereport --> <TestReport 'src/test/test_get_tournaments.py::test_get_all_tournaments' when='call' outcome='failed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'src/test/test_get_tournaments.py::test_get_all_tournaments' when='call' outcome='failed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'src/test/test_get_tournaments.py::test_get_all_tournaments' when='call' outcome='failed'>
              config: <_pytest.config.Config object at 0x000001E8A4CCFC20>
          finish pytest_report_teststatus --> ('failed', 'F', 'FAILED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_exception_interact [hook]
            node: <Coroutine test_get_all_tournaments>
            call: <CallInfo when='call' excinfo=<ExceptionInfo HTTPException(status_code=500, detail='Error al intentar obtener torneos') tblen=40>>
            report: <TestReport 'src/test/test_get_tournaments.py::test_get_all_tournaments' when='call' outcome='failed'>
        finish pytest_exception_interact --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Coroutine test_get_all_tournaments>
            nextitem: <Coroutine test_get_all_tournaments_with_filter>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_get_all_tournaments>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='mocker' scope='function' baseid='src/test/test_get_tournaments.py'>
              request: <SubRequest 'mocker' for <Coroutine test_get_all_tournaments>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_get_all_tournaments>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'src/test/test_get_tournaments.py::test_get_all_tournaments' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'src/test/test_get_tournaments.py::test_get_all_tournaments' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'src/test/test_get_tournaments.py::test_get_all_tournaments' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x000001E8A4CCFC20>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: src/test/test_get_tournaments.py::test_get_all_tournaments
            location: ('src\\test\\test_get_tournaments.py', 10, 'test_get_all_tournaments')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Coroutine test_get_all_tournaments_with_filter>
          nextitem: None
        pytest_runtest_logstart [hook]
            nodeid: src/test/test_get_tournaments.py::test_get_all_tournaments_with_filter
            location: ('src\\test\\test_get_tournaments.py', 43, 'test_get_all_tournaments_with_filter')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Coroutine test_get_all_tournaments_with_filter>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='mocker' scope='function' baseid='src/test/test_get_tournaments.py'>
              request: <SubRequest 'mocker' for <Coroutine test_get_all_tournaments_with_filter>>
          finish pytest_fixture_setup --> <pytest_mock.plugin.MockerFixture object at 0x000001E8AA1C4BC0> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_get_all_tournaments_with_filter>>
          finish pytest_fixture_setup --> <ProactorEventLoop running=False closed=False debug=False> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_get_all_tournaments_with_filter>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'src/test/test_get_tournaments.py::test_get_all_tournaments_with_filter' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'src/test/test_get_tournaments.py::test_get_all_tournaments_with_filter' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'src/test/test_get_tournaments.py::test_get_all_tournaments_with_filter' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x000001E8A4CCFC20>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Coroutine test_get_all_tournaments_with_filter>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Coroutine test_get_all_tournaments_with_filter>
        pytest_runtest_makereport [hook]
            item: <Coroutine test_get_all_tournaments_with_filter>
            call: <CallInfo when='call' excinfo=<ExceptionInfo HTTPException(status_code=500, detail='Error al intentar obtener torneos') tblen=40>>
        finish pytest_runtest_makereport --> <TestReport 'src/test/test_get_tournaments.py::test_get_all_tournaments_with_filter' when='call' outcome='failed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'src/test/test_get_tournaments.py::test_get_all_tournaments_with_filter' when='call' outcome='failed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'src/test/test_get_tournaments.py::test_get_all_tournaments_with_filter' when='call' outcome='failed'>
              config: <_pytest.config.Config object at 0x000001E8A4CCFC20>
          finish pytest_report_teststatus --> ('failed', 'F', 'FAILED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_exception_interact [hook]
            node: <Coroutine test_get_all_tournaments_with_filter>
            call: <CallInfo when='call' excinfo=<ExceptionInfo HTTPException(status_code=500, detail='Error al intentar obtener torneos') tblen=40>>
            report: <TestReport 'src/test/test_get_tournaments.py::test_get_all_tournaments_with_filter' when='call' outcome='failed'>
        finish pytest_exception_interact --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Coroutine test_get_all_tournaments_with_filter>
            nextitem: None
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_get_all_tournaments_with_filter>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='mocker' scope='function' baseid='src/test/test_get_tournaments.py'>
              request: <SubRequest 'mocker' for <Coroutine test_get_all_tournaments_with_filter>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='mocker' scope='function' baseid='src/test/test_get_tournaments.py'>
              request: <SubRequest 'mocker' for <Coroutine test_get_all_tournaments_with_filter>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='mocker' scope='function' baseid='src/test/test_get_tournaments.py'>
              request: <SubRequest 'mocker' for <Coroutine test_get_all_tournaments>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Coroutine test_get_all_tournaments>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Coroutine test_get_all_tournaments>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_get_all_tournaments_with_filter>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'src/test/test_get_tournaments.py::test_get_all_tournaments_with_filter' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'src/test/test_get_tournaments.py::test_get_all_tournaments_with_filter' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'src/test/test_get_tournaments.py::test_get_all_tournaments_with_filter' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x000001E8A4CCFC20>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: src/test/test_get_tournaments.py::test_get_all_tournaments_with_filter
            location: ('src\\test\\test_get_tournaments.py', 43, 'test_get_all_tournaments_with_filter')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
    finish pytest_runtestloop --> True [hook]
    pytest_sessionfinish [hook]
        session: <Session  exitstatus=<ExitCode.TESTS_FAILED: 1> testsfailed=2 testscollected=2>
        exitstatus: 1
      pytest_terminal_summary [hook]
          terminalreporter: <_pytest.terminal.TerminalReporter object at 0x000001E8A711A660>
          exitstatus: 1
          config: <_pytest.config.Config object at 0x000001E8A4CCFC20>
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
        pytest_report_teststatus [hook]
            report: <TestReport 'src/test/test_get_tournaments.py::test_get_all_tournaments' when='call' outcome='failed'>
            config: <_pytest.config.Config object at 0x000001E8A4CCFC20>
        finish pytest_report_teststatus --> ('failed', 'F', 'FAILED') [hook]
        pytest_report_teststatus [hook]
            report: <TestReport 'src/test/test_get_tournaments.py::test_get_all_tournaments_with_filter' when='call' outcome='failed'>
            config: <_pytest.config.Config object at 0x000001E8A4CCFC20>
        finish pytest_report_teststatus --> ('failed', 'F', 'FAILED') [hook]
      finish pytest_terminal_summary --> [] [hook]
    finish pytest_sessionfinish --> [] [hook]
    pytest_unconfigure [hook]
        config: <_pytest.config.Config object at 0x000001E8A4CCFC20>
    finish pytest_unconfigure --> [] [hook]
